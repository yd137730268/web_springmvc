<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xmlns:p="http://www.springframework.org/schema/p"
	xmlns:context="http://www.springframework.org/schema/context" xmlns:tx="http://www.springframework.org/schema/tx"
	xmlns:aop="http://www.springframework.org/schema/aop"
	xsi:schemaLocation="http://www.springframework.org/schema/beans
	http://www.springframework.org/schema/beans/spring-beans-3.2.xsd
	http://www.springframework.org/schema/context
	http://www.springframework.org/schema/context/spring-context-3.2.xsd
	http://www.springframework.org/schema/tx
	http://www.springframework.org/schema/tx/spring-tx-3.2.xsd
	http://www.springframework.org/schema/aop
	http://www.springframework.org/schema/aop/spring-aop-3.2.xsd">

	<!-- load the properties file to the application context -->
	<bean id="configProperties"
		class="org.springframework.beans.factory.config.PropertiesFactoryBean">
		<property name="locations">
			<list>
				<value>classpath:client.properties</value>
			</list>
		</property>
	</bean>
	<bean id="propertyConfigurer"
		class="org.springframework.beans.factory.config.PreferencesPlaceholderConfigurer">
		<property name="properties" ref="configProperties" />
	</bean>

	<!-- get beans in application context -->
	<bean id="applicationContextHelper" class="org.dy.springmvc.util.ApplicationContextHelper" />

	<!-- DB configuration -->
	<bean id="dataSource" class="org.apache.commons.dbcp.BasicDataSource">
		<property name="driverClassName" value="${db.driver}" />
		<property name="url" value="${db.url}"></property>
		<property name="username" value="${db.username}"></property>
		<property name="password" value="${db.password}"></property>
		<property name="initialSize" value="${db.initialSize}"></property>
		<property name="maxIdle" value="${db.maxIdle}"></property>
		<property name="maxActive" value="${db.maxActive}"></property>
	</bean>
	<bean id="sqlSessionFactory" class="org.mybatis.spring.SqlSessionFactoryBean">
		<property name="mapperLocations" value="classpath:*Mapper.xml" />
		<property name="plugins">
			<array>
			</array>
		</property>
		<property name="dataSource" ref="dataSource"></property>
	</bean>
	<bean id="diclectStatementHandleInterceptor"
		class="org.dy.springmvc.interceptor.DiclectStatementHandlerInterceptor" />
	<bean id="sqlSession" class="org.mybatis.spring.SqlSessionTemplate">
		<constructor-arg index="0" ref="sqlSessionFactory" />
	</bean>
	<bean id="txManager" class="org.springframework.jdbc.datasource.DataSourceTransactionManager">
	    <property name="dataSource" ref="dataSource"/>
	</bean>
	<tx:advice id="txAdvice" transaction-manager="txManager">
		<tx:attributes>
			<tx:method name="save*" propagation="REQUIRED" />
			<tx:method name="add*" propagation="REQUIRED" />
			<tx:method name="delete*" propagation="REQUIRED" />
		</tx:attributes>
	</tx:advice>
	<aop:config>
		<aop:pointcut expression="execution (* org.dy.springmvc.service.impl.*.*(..))"
			id="services" />
		<aop:advisor advice-ref="txAdvice" pointcut-ref="services" />
	</aop:config>
	<tx:annotation-driven transaction-manager="txManager"/>
	
	<!-- RMI -->
	<!-- <bean id="rmiClient" class="org.springframework.remoting.rmi.RmiProxyFactoryBean" abstract="true">
		<property name="lookupStubOnStartup" value="false" />
		<property name="refreshStubonConnnectFailure" value="true" />
	</bean>
	
	<bean id="dumyRmiService" parent="rmiClient">
		<property name="serviceUrl" value="rmi://${dumy.rmi.server_host}:${dumy.rmi.registry_port}/${dumy.rmi.service_name}"></property>
		<property name="serviceInterface" value="org.dy.springmvc.rmi.service.DumyRMIService"
	</bean> -->
	
</beans>